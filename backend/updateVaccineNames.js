import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function updateSpecificVaccines() {
    try {
        console.log(
            "üîÑ C·∫≠p nh·∫≠t c√°c vaccine combo v·ªõi diseaseName ch√≠nh x√°c h∆°n..."
        );

        // C√°c vaccine c·∫ßn c·∫≠p nh·∫≠t th·ªß c√¥ng
        const updates = [
            {
                name: "V·∫Øc xin 6 trong 1 Hexaxim",
                newDiseaseName:
                    "B·∫°ch h·∫ßu, Ho g√†, U·ªën v√°n, B·∫°i li·ªát, Hib, Vi√™m gan B",
            },
            {
                name: "Vaccine Hexaxim",
                newDiseaseName:
                    "B·∫°ch h·∫ßu, Ho g√†, U·ªën v√°n, B·∫°i li·ªát, Hib, Vi√™m gan B",
            },
            {
                name: "DTP",
                newDiseaseName: "B·∫°ch h·∫ßu, Ho g√†, U·ªën v√°n",
            },
            {
                name: "D·∫°i",
                newDiseaseName: "B·ªánh d·∫°i",
            },
            {
                name: "HIV",
                newDiseaseName: "HIV (Vaccine th·ª≠ nghi·ªám)",
            },
        ];

        for (const update of updates) {
            console.log(`\nüìù C·∫≠p nh·∫≠t "${update.name}":`);
            console.log(`   T·ª´: c≈© ‚Üí Sang: "${update.newDiseaseName}"`);

            const result = await prisma.vaccine.updateMany({
                where: { name: update.name },
                data: { diseaseName: update.newDiseaseName },
            });

            if (result.count > 0) {
                console.log(`   ‚úÖ ƒê√£ c·∫≠p nh·∫≠t ${result.count} vaccine(s)`);
            } else {
                console.log(`   ‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y vaccine v·ªõi t√™n n√†y`);
            }
        }

        console.log(`\nüéâ Ho√†n th√†nh c·∫≠p nh·∫≠t c√°c vaccine combo!`);

        // Ki·ªÉm tra l·∫°i k·∫øt qu·∫£
        console.log("\nüîç K·∫øt qu·∫£ cu·ªëi c√πng:");
        const allVaccines = await prisma.vaccine.findMany({
            select: {
                name: true,
                diseaseName: true,
            },
            orderBy: { name: "asc" },
        });

        for (const vaccine of allVaccines) {
            console.log(`- ${vaccine.name}: "${vaccine.diseaseName}"`);
        }
    } catch (error) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t:", error);
    } finally {
        await prisma.$disconnect();
    }
}

// Ch·∫°y script
updateSpecificVaccines();
